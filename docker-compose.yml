version: '3.8'

services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=public_db
      - POSTGRES_USER=public_user
      - POSTGRES_PASSWORD=publicN3xt!
    volumes:
      - postgres_data:/var/lib/postgresql/data
    #  - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: public_user
      MONGO_INITDB_ROOT_PASSWORD: publicN3xt!
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  order-management-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: order-management-service/target/order-management-service-1.0-SNAPSHOT.jar
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  order-processing-log-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: order-processing-log-service/target/order-processing-log-service-1.0-SNAPSHOT.jar
    ports:
      - "8090:8090"
    depends_on:
      - mongo
    environment:
      - SPRING_PROFILES_ACTIVE=docker
volumes:
  postgres_data:
  mongo_data:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/public_db
  #     - SPRING_DATASOURCE_USERNAME=public_user
  #     - SPRING_DATASOURCE_PASSWORD=publicN3xt!